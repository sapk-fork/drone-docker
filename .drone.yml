workspace:
  base: /go
  path: src/github.com/drone-plugins/drone-docker

pipeline:

  build:
    image: golang:1.10
    environment:
     - CGO_ENABLED=0
    commands:
      - go get -u github.com/golang/dep/cmd/dep
      - dep ensure
      - go vet ./...
      - go test -cover ./...
      - go build -ldflags "-X main.build=${DRONE_BUILD_NUMBER}" -a -tags netgo -o "release/${GOOS}/${GOARCH}/drone-docker" github.com/drone-plugins/drone-docker/cmd/drone-docker
      - go build -a -tags netgo -o release/${GOOS}/${GOARCH}/drone-docker-heroku github.com/drone-plugins/drone-docker/cmd/drone-docker-heroku
      - go build -a -tags netgo -o release/${GOOS}/${GOARCH}/drone-docker-gcr github.com/drone-plugins/drone-docker/cmd/drone-docker-gcr
      - go build -a -tags netgo -o release/${GOOS}/${GOARCH}/drone-docker-ecr github.com/drone-plugins/drone-docker/cmd/drone-docker-ecr

#TODO replace with AGR for FROM to load each platform

  publish:
    image: plugins/docker
    repo: sapk/plugins-docker
    tags: [ "latest-${GOOS}-${GOARCH}", "18-${GOOS}-${GOARCH}", "18.03-${GOOS}-${GOARCH}" ]
    args: ["OS=${GOOS}", "ARCH=${GOARCH}"]
    secrets: [ docker_username, docker_password ]
    dockerfile: docker/Dockerfile
    when:
      branch: master
      event: push

  publish_heroku:
    image: sapk/plugins-docker
    repo: sapk/plugins-heroku
    tags: [ "latest-${GOOS}-${GOARCH}", "18-${GOOS}-${GOARCH}", "18.03-${GOOS}-${GOARCH}" ]
    args: ["OS=${GOOS}", "ARCH=${GOARCH}"]
    secrets: [ docker_username, docker_password ]
    dockerfile: docker/heroku/Dockerfile
    when:
      branch: master
      event: push

  publish_gcr:
    image: sapk/plugins-docker
    repo: sapk/plugins-gcr
    tags: [ "latest-${GOOS}-${GOARCH}", "18-${GOOS}-${GOARCH}", "18.03-${GOOS}-${GOARCH}" ]
    args: ["OS=${GOOS}", "ARCH=${GOARCH}"]
    secrets: [ docker_username, docker_password ]
    dockerfile: docker/gcr/Dockerfile
    when:
      branch: master
      event: push

  publish_ecr:
    image: sapk/plugins-docker
    repo: sapk/plugins-ecr
    tags: [ "latest-${GOOS}-${GOARCH}", "18-${GOOS}-${GOARCH}", "18.03-${GOOS}-${GOARCH}" ]
    args: ["OS=${GOOS}", "ARCH=${GOARCH}"]
    secrets: [ docker_username, docker_password ]
    dockerfile: docker/ecr/Dockerfile
    when:
      branch: master
      event: push

#Add manifest upload

matrix:
  include:
    - GOOS: linux
      GOARCH: amd64
    - GOOS: linux
      GOARCH: arm64
    - GOOS: linux
      GOARCH: arm
      GOARM: 7
